= Dashboard画面を使ってみる
そうですね。Visualize画面では1度に表示できるグラフは1個だけです。
作成したグラフを1つのページで全て閲覧できれば便利ですよね。

Dashboard画面はグラフを1つにまとめる役割を持ちます。
まずは1つ作成してみましょう。

== グラフを並べる
始めに画面左上の@<b>{Dashboard}ボタンをクリックし、画面を切り替えます。

始めに使いたいグラフを選択します。画面上部の@<b>{Add}をクリックし、
@<tt>{Visualization}タブから保存したグラフ名を選択します。

このときに@<tt>{Search}タブを選択し、保存した検索条件を選択すると
簡易版のDiscover画面を表示することができます。生データを参照したい場合は便利です。

//image[kibana_Dashboard_addGraph][グラフの追加]{
//}


== グラフの大きさを指定する
使いたいグラフを決めたあとはグラフを配置していきます。基本は＋の部分を押しながら、ドラック&ドロップで
グラフを配置していくだけです。
グラフの大きさを変更したい場合、グラフ右下をクリックしたままドラック&ドロップで
大きさを調整します。ある程度は自動で大きさが決まってしまうので、ミリ単位の調節はできません。

//image[kibana_Dashboard_example][Dashboardの一例]{
//}

== 保存する（検索期間を保持する/しないを選択する）
最後に、作成したDashboardを保存します。保存画面は他と同様@<tt>{Save}から
表示することができますが、1点他のグラフと違う点があります。それは「現在設定している検索期間も同時に保存するか？」と言う点です。
@<b>{Store time with dashboard}にチェックをつけずに保存すると、Dashboardを開き直したときはデフォルトの検索期間（15分）
が表示されます。

//image[kibana_Dashboard_storeTime][Dashboardの保存]{
//}

逆にチェックを入れて保存すると、Dashboard保存時の検索期間も適用した状態で
Dashboardを開くことができます。毎回決まった検索期間を指定するような使い方をしたい場合は
チェックを入れておくと良いでしょう。

これでDashboard画面を作成することができました。Kibanaの紹介でみるような画面になりましたね。

== グラフの色を変更（お好みでどうぞ）
オプションの設定ですが、KibanaのDashboardのみ背景色を白・黒のどちらかに設定できます。
グラフ右上の@<b>{Options}から設定します。

//image[example_Dashboard][Dashboardの作成例]{

//}
